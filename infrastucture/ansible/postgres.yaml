- name: Install PostgreSQL
  hosts: all
  become: true
  vars:
    postgres_version: 16
    postgres_password: "pass"

  tasks:
    - name: Wait for the apt lock to be released
      ansible.builtin.shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
          sleep 1
        done
      changed_when: false

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - curl
          - wget
          - gnupg
          - lsb-release
          - apt-transport-https
          - software-properties-common
          - ca-certificates
          - python3-psycopg2
          - libpq-dev
        state: present

    - name: Add PostgreSQL signing key
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Wait for the apt lock to be released
      ansible.builtin.shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
          sleep 1
        done
      changed_when: false

    - name: Add PostgreSQL APT repository
      ansible.builtin.apt_repository:
        repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
        state: present
        filename: "pgdg"

    - name: Wait for the apt lock to be released
      ansible.builtin.shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
          sleep 1
        done
      changed_when: false

    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: "postgresql-{{ postgres_version }}"
        state: present
        update_cache: true

    - name: Ensure PostgreSQL is running
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    - name: Create database and user (case-sensitive)
      ansible.builtin.shell: |
        sudo -u postgres psql -c "CREATE DATABASE \"BrainRot\";"
        sudo -u postgres psql -c "CREATE USER app_user WITH PASSWORD 'pass';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \"BrainRot\" TO app_user;"
      changed_when: false

    - name: Run SQL to create tables
      become: true
      become_user: postgres
      become_method: ansible.builtin.sudo
      community.postgresql.postgresql_query:
        db: "BrainRot"
        query: "{{ lookup('file', '/home/ubuntu/sql/00init_script.sql') }}"

    - name: Run SQL to populate data
      become: true
      become_user: postgres
      become_method: ansible.builtin.sudo
      community.postgresql.postgresql_query:
        db: "BrainRot"
        query: "{{ lookup('file', '/home/ubuntu/sql/01populate_data.sql') }}"
