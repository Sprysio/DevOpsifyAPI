- name: Install and configure K3s
  hosts: all
  become: true
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  vars_files:
    - vars.yaml
  tasks:
    - name: Wait for the apt lock to be released
      ansible.builtin.shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          sleep 1
        done
      changed_when: false

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - curl
          - wget
          - gnupg
          - lsb-release
          - apt-transport-https
          - software-properties-common
          - ca-certificates
          - git
        state: present

    - name: Download K3s installation script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/get_k3s.sh
        mode: '0755'

    - name: Install K3s
      ansible.builtin.shell: |
        /tmp/get_k3s.sh --write-kubeconfig-mode 644
      args:
        creates: /usr/local/bin/k3s

    - name: Create ConfigMap with VM IP
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: vm-ip-config
            namespace: dev
          data:
            vm_ip: "{{ ansible_host }}"

    - name: Install ArgoCD
      ansible.builtin.command: >
        helm install argocd argocd/argo-cd
        --namespace argocd
        --create-namespace
      register: helm_argocd_install
      changed_when: "'already exists' not in helm_argocd_install.stderr"

    - name: Apply ArgoCD command parameters making it http instead of https
      ansible.builtin.command: kubectl apply -f {{ user_home }}/argocd/argocd-cmd-params-cm.yaml
      changed_when: false

    - name: Restart ArgoCD server to apply changes
      ansible.builtin.command: kubectl -n argocd rollout restart deployment/argocd-server
      changed_when: false

    - name: Apply ArgoCD ingress
      ansible.builtin.command: kubectl apply -f {{ user_home }}/argocd/argocd-ingress.yaml
      changed_when: false

    - name: Apply ArgoCD applications
      ansible.builtin.command: kubectl apply -f "{{ user_home }}/argocd/apiserver.yaml"
      changed_when: false

    - name: Add argocd.local to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 argocd.local"
        state: present
